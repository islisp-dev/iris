(progn (defgeneric f (x y z) (:method-combination nil))
(defclass C1 () ())
(defmethod f ((x C1) (y C1) (z C1)) nil)
(defclass C2 (C1) ())
(defmethod f ((x C2) (y C2) (z C2))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C2 'C2 'C2)
                 (f (create (class C2))
                    (create (class C2))
                    (create (class C1))))
(defmethod f ((x C2) (y C2) (z C1))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C2 'C2 'C1)
                 (f (create (class C2))
                    (create (class C1))
                    (create (class C2))))
(defmethod f ((x C2) (y C1) (z C2))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C2 'C1 'C2)
                 (f (create (class C1))
                    (create (class C2))
                    (create (class C2))))
(defmethod f ((x C1) (y C2) (z C2))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C1 'C2 'C2)
                 (f (create (class C2))
                    (create (class C1))
                    (create (class C1))))
(defmethod f ((x C2) (y C1) (z C1))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C2 'C1 'C1)
                 (f (create (class C1))
                    (create (class C2))
                    (create (class C1))))
(defmethod f ((x C1) (y C2) (z C1))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C1 'C2 'C1)
                 (f (create (class C1))
                    (create (class C1))
                    (create (class C2))))
(defmethod f ((x C1) (y C1) (z C2))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C1 'C1 'C2)
                 (f (create (class C1))
                    (create (class C1))
                    (create (class C1))))
(defmethod f ((x C1) (y C1) (z C1))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C1 'C1 'C1)
                 (if (next-method-p) (call-next-method)))
(defclass C3 (C2) ())
(defmethod f ((x C3) (y C3) (z C3))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C3 'C3 'C3)
                 (f (create (class C3))
                    (create (class C3))
                    (create (class C2))))
(defmethod f ((x C3) (y C3) (z C2))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C3 'C3 'C2)
                 (f (create (class C3))
                    (create (class C2))
                    (create (class C3))))
(defmethod f ((x C3) (y C2) (z C3))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C3 'C2 'C3)
                 (f (create (class C2))
                    (create (class C3))
                    (create (class C3))))
(defmethod f ((x C2) (y C3) (z C3))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C2 'C3 'C3)
                 (f (create (class C3))
                    (create (class C2))
                    (create (class C2))))
(defmethod f ((x C3) (y C2) (z C2))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C3 'C2 'C2)
                 (f (create (class C2))
                    (create (class C3))
                    (create (class C2))))
(defmethod f ((x C2) (y C3) (z C2))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C2 'C3 'C2)
                 (f (create (class C2))
                    (create (class C2))
                    (create (class C3))))
(defmethod f ((x C2) (y C2) (z C3))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C2 'C2 'C3)
                 (f (create (class C2))
                    (create (class C2))
                    (create (class C2))))
(defmethod f ((x C2) (y C2) (z C2))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C2 'C2 'C2)
                 (if (next-method-p) (call-next-method)))
(defclass C4 (C3) ())
(defmethod f ((x C4) (y C4) (z C4))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C4 'C4 'C4)
                 (f (create (class C4))
                    (create (class C4))
                    (create (class C3))))
(defmethod f ((x C4) (y C4) (z C3))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C4 'C4 'C3)
                 (f (create (class C4))
                    (create (class C3))
                    (create (class C4))))
(defmethod f ((x C4) (y C3) (z C4))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C4 'C3 'C4)
                 (f (create (class C3))
                    (create (class C4))
                    (create (class C4))))
(defmethod f ((x C3) (y C4) (z C4))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C3 'C4 'C4)
                 (f (create (class C4))
                    (create (class C3))
                    (create (class C3))))
(defmethod f ((x C4) (y C3) (z C3))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C4 'C3 'C3)
                 (f (create (class C3))
                    (create (class C4))
                    (create (class C3))))
(defmethod f ((x C3) (y C4) (z C3))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C3 'C4 'C3)
                 (f (create (class C3))
                    (create (class C3))
                    (create (class C4))))
(defmethod f ((x C3) (y C3) (z C4))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C3 'C3 'C4)
                 (f (create (class C3))
                    (create (class C3))
                    (create (class C3))))
(defmethod f ((x C3) (y C3) (z C3))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C3 'C3 'C3)
                 (if (next-method-p) (call-next-method)))
(defclass C5 (C4) ())
(defmethod f ((x C5) (y C5) (z C5))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C5 'C5 'C5)
                 (f (create (class C5))
                    (create (class C5))
                    (create (class C4))))
(defmethod f ((x C5) (y C5) (z C4))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C5 'C5 'C4)
                 (f (create (class C5))
                    (create (class C4))
                    (create (class C5))))
(defmethod f ((x C5) (y C4) (z C5))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C5 'C4 'C5)
                 (f (create (class C4))
                    (create (class C5))
                    (create (class C5))))
(defmethod f ((x C4) (y C5) (z C5))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C4 'C5 'C5)
                 (f (create (class C5))
                    (create (class C4))
                    (create (class C4))))
(defmethod f ((x C5) (y C4) (z C4))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C5 'C4 'C4)
                 (f (create (class C4))
                    (create (class C5))
                    (create (class C4))))
(defmethod f ((x C4) (y C5) (z C4))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C4 'C5 'C4)
                 (f (create (class C4))
                    (create (class C4))
                    (create (class C5))))
(defmethod f ((x C4) (y C4) (z C5))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C4 'C4 'C5)
                 (f (create (class C4))
                    (create (class C4))
                    (create (class C4))))
(defmethod f ((x C4) (y C4) (z C4))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C4 'C4 'C4)
                 (if (next-method-p) (call-next-method)))
(defclass C6 (C5) ())
(defmethod f ((x C6) (y C6) (z C6))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C6 'C6 'C6)
                 (f (create (class C6))
                    (create (class C6))
                    (create (class C5))))
(defmethod f ((x C6) (y C6) (z C5))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C6 'C6 'C5)
                 (f (create (class C6))
                    (create (class C5))
                    (create (class C6))))
(defmethod f ((x C6) (y C5) (z C6))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C6 'C5 'C6)
                 (f (create (class C5))
                    (create (class C6))
                    (create (class C6))))
(defmethod f ((x C5) (y C6) (z C6))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C5 'C6 'C6)
                 (f (create (class C6))
                    (create (class C5))
                    (create (class C5))))
(defmethod f ((x C6) (y C5) (z C5))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C6 'C5 'C5)
                 (f (create (class C5))
                    (create (class C6))
                    (create (class C5))))
(defmethod f ((x C5) (y C6) (z C5))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C5 'C6 'C5)
                 (f (create (class C5))
                    (create (class C5))
                    (create (class C6))))
(defmethod f ((x C5) (y C5) (z C6))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C5 'C5 'C6)
                 (f (create (class C5))
                    (create (class C5))
                    (create (class C5))))
(defmethod f ((x C5) (y C5) (z C5))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C5 'C5 'C5)
                 (if (next-method-p) (call-next-method)))
(defclass C7 (C6) ())
(defmethod f ((x C7) (y C7) (z C7))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C7 'C7 'C7)
                 (f (create (class C7))
                    (create (class C7))
                    (create (class C6))))
(defmethod f ((x C7) (y C7) (z C6))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C7 'C7 'C6)
                 (f (create (class C7))
                    (create (class C6))
                    (create (class C7))))
(defmethod f ((x C7) (y C6) (z C7))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C7 'C6 'C7)
                 (f (create (class C6))
                    (create (class C7))
                    (create (class C7))))
(defmethod f ((x C6) (y C7) (z C7))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C6 'C7 'C7)
                 (f (create (class C7))
                    (create (class C6))
                    (create (class C6))))
(defmethod f ((x C7) (y C6) (z C6))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C7 'C6 'C6)
                 (f (create (class C6))
                    (create (class C7))
                    (create (class C6))))
(defmethod f ((x C6) (y C7) (z C6))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C6 'C7 'C6)
                 (f (create (class C6))
                    (create (class C6))
                    (create (class C7))))
(defmethod f ((x C6) (y C6) (z C7))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C6 'C6 'C7)
                 (f (create (class C6))
                    (create (class C6))
                    (create (class C6))))
(defmethod f ((x C6) (y C6) (z C6))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C6 'C6 'C6)
                 (if (next-method-p) (call-next-method)))
(defclass C8 (C7) ())
(defmethod f ((x C8) (y C8) (z C8))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C8 'C8 'C8)
                 (f (create (class C8))
                    (create (class C8))
                    (create (class C7))))
(defmethod f ((x C8) (y C8) (z C7))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C8 'C8 'C7)
                 (f (create (class C8))
                    (create (class C7))
                    (create (class C8))))
(defmethod f ((x C8) (y C7) (z C8))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C8 'C7 'C8)
                 (f (create (class C7))
                    (create (class C8))
                    (create (class C8))))
(defmethod f ((x C7) (y C8) (z C8))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C7 'C8 'C8)
                 (f (create (class C8))
                    (create (class C7))
                    (create (class C7))))
(defmethod f ((x C8) (y C7) (z C7))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C8 'C7 'C7)
                 (f (create (class C7))
                    (create (class C8))
                    (create (class C7))))
(defmethod f ((x C7) (y C8) (z C7))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C7 'C8 'C7)
                 (f (create (class C7))
                    (create (class C7))
                    (create (class C8))))
(defmethod f ((x C7) (y C7) (z C8))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C7 'C7 'C8)
                 (f (create (class C7))
                    (create (class C7))
                    (create (class C7))))
(defmethod f ((x C7) (y C7) (z C7))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C7 'C7 'C7)
                 (if (next-method-p) (call-next-method)))
(defclass C9 (C8) ())
(defmethod f ((x C9) (y C9) (z C9))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C9 'C9 'C9)
                 (f (create (class C9))
                    (create (class C9))
                    (create (class C8))))
(defmethod f ((x C9) (y C9) (z C8))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C9 'C9 'C8)
                 (f (create (class C9))
                    (create (class C8))
                    (create (class C9))))
(defmethod f ((x C9) (y C8) (z C9))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C9 'C8 'C9)
                 (f (create (class C8))
                    (create (class C9))
                    (create (class C9))))
(defmethod f ((x C8) (y C9) (z C9))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C8 'C9 'C9)
                 (f (create (class C9))
                    (create (class C8))
                    (create (class C8))))
(defmethod f ((x C9) (y C8) (z C8))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C9 'C8 'C8)
                 (f (create (class C8))
                    (create (class C9))
                    (create (class C8))))
(defmethod f ((x C8) (y C9) (z C8))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C8 'C9 'C8)
                 (f (create (class C8))
                    (create (class C8))
                    (create (class C9))))
(defmethod f ((x C8) (y C8) (z C9))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C8 'C8 'C9)
                 (f (create (class C8))
                    (create (class C8))
                    (create (class C8))))
(defmethod f ((x C8) (y C8) (z C8))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C8 'C8 'C8)
                 (if (next-method-p) (call-next-method)))
(defclass C10 (C9) ())
(defmethod f ((x C10) (y C10) (z C10))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C10 'C10 'C10)
                 (f (create (class C10))
                    (create (class C10))
                    (create (class C9))))
(defmethod f ((x C10) (y C10) (z C9))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C10 'C10 'C9)
                 (f (create (class C10))
                    (create (class C9))
                    (create (class C10))))
(defmethod f ((x C10) (y C9) (z C10))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C10 'C9 'C10)
                 (f (create (class C9))
                    (create (class C10))
                    (create (class C10))))
(defmethod f ((x C9) (y C10) (z C10))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C9 'C10 'C10)
                 (f (create (class C10))
                    (create (class C9))
                    (create (class C9))))
(defmethod f ((x C10) (y C9) (z C9))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C10 'C9 'C9)
                 (f (create (class C9))
                    (create (class C10))
                    (create (class C9))))
(defmethod f ((x C9) (y C10) (z C9))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C9 'C10 'C9)
                 (f (create (class C9))
                    (create (class C9))
                    (create (class C10))))
(defmethod f ((x C9) (y C9) (z C10))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C9 'C9 'C10)
                 (f (create (class C9))
                    (create (class C9))
                    (create (class C9))))
(defmethod f ((x C9) (y C9) (z C9))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C9 'C9 'C9)
                 (if (next-method-p) (call-next-method)))
(defclass C11 (C10) ())
(defmethod f ((x C11) (y C11) (z C11))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C11 'C11 'C11)
                 (f (create (class C11))
                    (create (class C11))
                    (create (class C10))))
(defmethod f ((x C11) (y C11) (z C10))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C11 'C11 'C10)
                 (f (create (class C11))
                    (create (class C10))
                    (create (class C11))))
(defmethod f ((x C11) (y C10) (z C11))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C11 'C10 'C11)
                 (f (create (class C10))
                    (create (class C11))
                    (create (class C11))))
(defmethod f ((x C10) (y C11) (z C11))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C10 'C11 'C11)
                 (f (create (class C11))
                    (create (class C10))
                    (create (class C10))))
(defmethod f ((x C11) (y C10) (z C10))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C11 'C10 'C10)
                 (f (create (class C10))
                    (create (class C11))
                    (create (class C10))))
(defmethod f ((x C10) (y C11) (z C10))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C10 'C11 'C10)
                 (f (create (class C10))
                    (create (class C10))
                    (create (class C11))))
(defmethod f ((x C10) (y C10) (z C11))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C10 'C10 'C11)
                 (f (create (class C10))
                    (create (class C10))
                    (create (class C10))))
(defmethod f ((x C10) (y C10) (z C10))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C10 'C10 'C10)
                 (if (next-method-p) (call-next-method)))
(defclass C12 (C11) ())
(defmethod f ((x C12) (y C12) (z C12))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C12 'C12 'C12)
                 (f (create (class C12))
                    (create (class C12))
                    (create (class C11))))
(defmethod f ((x C12) (y C12) (z C11))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C12 'C12 'C11)
                 (f (create (class C12))
                    (create (class C11))
                    (create (class C12))))
(defmethod f ((x C12) (y C11) (z C12))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C12 'C11 'C12)
                 (f (create (class C11))
                    (create (class C12))
                    (create (class C12))))
(defmethod f ((x C11) (y C12) (z C12))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C11 'C12 'C12)
                 (f (create (class C12))
                    (create (class C11))
                    (create (class C11))))
(defmethod f ((x C12) (y C11) (z C11))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C12 'C11 'C11)
                 (f (create (class C11))
                    (create (class C12))
                    (create (class C11))))
(defmethod f ((x C11) (y C12) (z C11))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C11 'C12 'C11)
                 (f (create (class C11))
                    (create (class C11))
                    (create (class C12))))
(defmethod f ((x C11) (y C11) (z C12))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C11 'C11 'C12)
                 (f (create (class C11))
                    (create (class C11))
                    (create (class C11))))
(defmethod f ((x C11) (y C11) (z C11))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C11 'C11 'C11)
                 (if (next-method-p) (call-next-method)))
(defclass C13 (C12) ())
(defmethod f ((x C13) (y C13) (z C13))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C13 'C13 'C13)
                 (f (create (class C13))
                    (create (class C13))
                    (create (class C12))))
(defmethod f ((x C13) (y C13) (z C12))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C13 'C13 'C12)
                 (f (create (class C13))
                    (create (class C12))
                    (create (class C13))))
(defmethod f ((x C13) (y C12) (z C13))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C13 'C12 'C13)
                 (f (create (class C12))
                    (create (class C13))
                    (create (class C13))))
(defmethod f ((x C12) (y C13) (z C13))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C12 'C13 'C13)
                 (f (create (class C13))
                    (create (class C12))
                    (create (class C12))))
(defmethod f ((x C13) (y C12) (z C12))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C13 'C12 'C12)
                 (f (create (class C12))
                    (create (class C13))
                    (create (class C12))))
(defmethod f ((x C12) (y C13) (z C12))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C12 'C13 'C12)
                 (f (create (class C12))
                    (create (class C12))
                    (create (class C13))))
(defmethod f ((x C12) (y C12) (z C13))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C12 'C12 'C13)
                 (f (create (class C12))
                    (create (class C12))
                    (create (class C12))))
(defmethod f ((x C12) (y C12) (z C12))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C12 'C12 'C12)
                 (if (next-method-p) (call-next-method)))
(defclass C14 (C13) ())
(defmethod f ((x C14) (y C14) (z C14))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C14 'C14 'C14)
                 (f (create (class C14))
                    (create (class C14))
                    (create (class C13))))
(defmethod f ((x C14) (y C14) (z C13))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C14 'C14 'C13)
                 (f (create (class C14))
                    (create (class C13))
                    (create (class C14))))
(defmethod f ((x C14) (y C13) (z C14))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C14 'C13 'C14)
                 (f (create (class C13))
                    (create (class C14))
                    (create (class C14))))
(defmethod f ((x C13) (y C14) (z C14))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C13 'C14 'C14)
                 (f (create (class C14))
                    (create (class C13))
                    (create (class C13))))
(defmethod f ((x C14) (y C13) (z C13))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C14 'C13 'C13)
                 (f (create (class C13))
                    (create (class C14))
                    (create (class C13))))
(defmethod f ((x C13) (y C14) (z C13))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C13 'C14 'C13)
                 (f (create (class C13))
                    (create (class C13))
                    (create (class C14))))
(defmethod f ((x C13) (y C13) (z C14))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C13 'C13 'C14)
                 (f (create (class C13))
                    (create (class C13))
                    (create (class C13))))
(defmethod f ((x C13) (y C13) (z C13))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C13 'C13 'C13)
                 (if (next-method-p) (call-next-method)))
(defclass C15 (C14) ())
(defmethod f ((x C15) (y C15) (z C15))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C15 'C15 'C15)
                 (f (create (class C15))
                    (create (class C15))
                    (create (class C14))))
(defmethod f ((x C15) (y C15) (z C14))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C15 'C15 'C14)
                 (f (create (class C15))
                    (create (class C14))
                    (create (class C15))))
(defmethod f ((x C15) (y C14) (z C15))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C15 'C14 'C15)
                 (f (create (class C14))
                    (create (class C15))
                    (create (class C15))))
(defmethod f ((x C14) (y C15) (z C15))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C14 'C15 'C15)
                 (f (create (class C15))
                    (create (class C14))
                    (create (class C14))))
(defmethod f ((x C15) (y C14) (z C14))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C15 'C14 'C14)
                 (f (create (class C14))
                    (create (class C15))
                    (create (class C14))))
(defmethod f ((x C14) (y C15) (z C14))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C14 'C15 'C14)
                 (f (create (class C14))
                    (create (class C14))
                    (create (class C15))))
(defmethod f ((x C14) (y C14) (z C15))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C14 'C14 'C15)
                 (f (create (class C14))
                    (create (class C14))
                    (create (class C14))))
(defmethod f ((x C14) (y C14) (z C14))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C14 'C14 'C14)
                 (if (next-method-p) (call-next-method)))
(defclass C16 (C15) ())
(defmethod f ((x C16) (y C16) (z C16))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C16 'C16 'C16)
                 (f (create (class C16))
                    (create (class C16))
                    (create (class C15))))
(defmethod f ((x C16) (y C16) (z C15))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C16 'C16 'C15)
                 (f (create (class C16))
                    (create (class C15))
                    (create (class C16))))
(defmethod f ((x C16) (y C15) (z C16))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C16 'C15 'C16)
                 (f (create (class C15))
                    (create (class C16))
                    (create (class C16))))
(defmethod f ((x C15) (y C16) (z C16))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C15 'C16 'C16)
                 (f (create (class C16))
                    (create (class C15))
                    (create (class C15))))
(defmethod f ((x C16) (y C15) (z C15))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C16 'C15 'C15)
                 (f (create (class C15))
                    (create (class C16))
                    (create (class C15))))
(defmethod f ((x C15) (y C16) (z C15))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C15 'C16 'C15)
                 (f (create (class C15))
                    (create (class C15))
                    (create (class C16))))
(defmethod f ((x C15) (y C15) (z C16))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C15 'C15 'C16)
                 (f (create (class C15))
                    (create (class C15))
                    (create (class C15))))
(defmethod f ((x C15) (y C15) (z C15))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C15 'C15 'C15)
                 (if (next-method-p) (call-next-method)))
(defclass C17 (C16) ())
(defmethod f ((x C17) (y C17) (z C17))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C17 'C17 'C17)
                 (f (create (class C17))
                    (create (class C17))
                    (create (class C16))))
(defmethod f ((x C17) (y C17) (z C16))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C17 'C17 'C16)
                 (f (create (class C17))
                    (create (class C16))
                    (create (class C17))))
(defmethod f ((x C17) (y C16) (z C17))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C17 'C16 'C17)
                 (f (create (class C16))
                    (create (class C17))
                    (create (class C17))))
(defmethod f ((x C16) (y C17) (z C17))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C16 'C17 'C17)
                 (f (create (class C17))
                    (create (class C16))
                    (create (class C16))))
(defmethod f ((x C17) (y C16) (z C16))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C17 'C16 'C16)
                 (f (create (class C16))
                    (create (class C17))
                    (create (class C16))))
(defmethod f ((x C16) (y C17) (z C16))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C16 'C17 'C16)
                 (f (create (class C16))
                    (create (class C16))
                    (create (class C17))))
(defmethod f ((x C16) (y C16) (z C17))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C16 'C16 'C17)
                 (f (create (class C16))
                    (create (class C16))
                    (create (class C16))))
(defmethod f ((x C16) (y C16) (z C16))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C16 'C16 'C16)
                 (if (next-method-p) (call-next-method)))
(defclass C18 (C17) ())
(defmethod f ((x C18) (y C18) (z C18))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C18 'C18 'C18)
                 (f (create (class C18))
                    (create (class C18))
                    (create (class C17))))
(defmethod f ((x C18) (y C18) (z C17))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C18 'C18 'C17)
                 (f (create (class C18))
                    (create (class C17))
                    (create (class C18))))
(defmethod f ((x C18) (y C17) (z C18))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C18 'C17 'C18)
                 (f (create (class C17))
                    (create (class C18))
                    (create (class C18))))
(defmethod f ((x C17) (y C18) (z C18))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C17 'C18 'C18)
                 (f (create (class C18))
                    (create (class C17))
                    (create (class C17))))
(defmethod f ((x C18) (y C17) (z C17))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C18 'C17 'C17)
                 (f (create (class C17))
                    (create (class C18))
                    (create (class C17))))
(defmethod f ((x C17) (y C18) (z C17))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C17 'C18 'C17)
                 (f (create (class C17))
                    (create (class C17))
                    (create (class C18))))
(defmethod f ((x C17) (y C17) (z C18))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C17 'C17 'C18)
                 (f (create (class C17))
                    (create (class C17))
                    (create (class C17))))
(defmethod f ((x C17) (y C17) (z C17))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C17 'C17 'C17)
                 (if (next-method-p) (call-next-method)))
(defclass C19 (C18) ())
(defmethod f ((x C19) (y C19) (z C19))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C19 'C19 'C19)
                 (f (create (class C19))
                    (create (class C19))
                    (create (class C18))))
(defmethod f ((x C19) (y C19) (z C18))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C19 'C19 'C18)
                 (f (create (class C19))
                    (create (class C18))
                    (create (class C19))))
(defmethod f ((x C19) (y C18) (z C19))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C19 'C18 'C19)
                 (f (create (class C18))
                    (create (class C19))
                    (create (class C19))))
(defmethod f ((x C18) (y C19) (z C19))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C18 'C19 'C19)
                 (f (create (class C19))
                    (create (class C18))
                    (create (class C18))))
(defmethod f ((x C19) (y C18) (z C18))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C19 'C18 'C18)
                 (f (create (class C18))
                    (create (class C19))
                    (create (class C18))))
(defmethod f ((x C18) (y C19) (z C18))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C18 'C19 'C18)
                 (f (create (class C18))
                    (create (class C18))
                    (create (class C19))))
(defmethod f ((x C18) (y C18) (z C19))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C18 'C18 'C19)
                 (f (create (class C18))
                    (create (class C18))
                    (create (class C18))))
(defmethod f ((x C18) (y C18) (z C18))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C18 'C18 'C18)
                 (if (next-method-p) (call-next-method)))
(defclass C20 (C19) ())
(defmethod f ((x C20) (y C20) (z C20))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C20 'C20 'C20)
                 (f (create (class C20))
                    (create (class C20))
                    (create (class C19))))
(defmethod f ((x C20) (y C20) (z C19))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C20 'C20 'C19)
                 (f (create (class C20))
                    (create (class C19))
                    (create (class C20))))
(defmethod f ((x C20) (y C19) (z C20))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C20 'C19 'C20)
                 (f (create (class C19))
                    (create (class C20))
                    (create (class C20))))
(defmethod f ((x C19) (y C20) (z C20))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C19 'C20 'C20)
                 (f (create (class C20))
                    (create (class C19))
                    (create (class C19))))
(defmethod f ((x C20) (y C19) (z C19))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C20 'C19 'C19)
                 (f (create (class C19))
                    (create (class C20))
                    (create (class C19))))
(defmethod f ((x C19) (y C20) (z C19))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C19 'C20 'C19)
                 (f (create (class C19))
                    (create (class C19))
                    (create (class C20))))
(defmethod f ((x C19) (y C19) (z C20))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C19 'C19 'C20)
                 (f (create (class C19))
                    (create (class C19))
                    (create (class C19))))
(defmethod f ((x C19) (y C19) (z C19))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C19 'C19 'C19)
                 (if (next-method-p) (call-next-method)))
(defclass C21 (C20) ())
(defmethod f ((x C21) (y C21) (z C21))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C21 'C21 'C21)
                 (f (create (class C21))
                    (create (class C21))
                    (create (class C20))))
(defmethod f ((x C21) (y C21) (z C20))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C21 'C21 'C20)
                 (f (create (class C21))
                    (create (class C20))
                    (create (class C21))))
(defmethod f ((x C21) (y C20) (z C21))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C21 'C20 'C21)
                 (f (create (class C20))
                    (create (class C21))
                    (create (class C21))))
(defmethod f ((x C20) (y C21) (z C21))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C20 'C21 'C21)
                 (f (create (class C21))
                    (create (class C20))
                    (create (class C20))))
(defmethod f ((x C21) (y C20) (z C20))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C21 'C20 'C20)
                 (f (create (class C20))
                    (create (class C21))
                    (create (class C20))))
(defmethod f ((x C20) (y C21) (z C20))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C20 'C21 'C20)
                 (f (create (class C20))
                    (create (class C20))
                    (create (class C21))))
(defmethod f ((x C20) (y C20) (z C21))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C20 'C20 'C21)
                 (f (create (class C20))
                    (create (class C20))
                    (create (class C20))))
(defmethod f ((x C20) (y C20) (z C20))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C20 'C20 'C20)
                 (if (next-method-p) (call-next-method)))
(defclass C22 (C21) ())
(defmethod f ((x C22) (y C22) (z C22))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C22 'C22 'C22)
                 (f (create (class C22))
                    (create (class C22))
                    (create (class C21))))
(defmethod f ((x C22) (y C22) (z C21))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C22 'C22 'C21)
                 (f (create (class C22))
                    (create (class C21))
                    (create (class C22))))
(defmethod f ((x C22) (y C21) (z C22))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C22 'C21 'C22)
                 (f (create (class C21))
                    (create (class C22))
                    (create (class C22))))
(defmethod f ((x C21) (y C22) (z C22))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C21 'C22 'C22)
                 (f (create (class C22))
                    (create (class C21))
                    (create (class C21))))
(defmethod f ((x C22) (y C21) (z C21))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C22 'C21 'C21)
                 (f (create (class C21))
                    (create (class C22))
                    (create (class C21))))
(defmethod f ((x C21) (y C22) (z C21))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C21 'C22 'C21)
                 (f (create (class C21))
                    (create (class C21))
                    (create (class C22))))
(defmethod f ((x C21) (y C21) (z C22))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C21 'C21 'C22)
                 (f (create (class C21))
                    (create (class C21))
                    (create (class C21))))
(defmethod f ((x C21) (y C21) (z C21))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C21 'C21 'C21)
                 (if (next-method-p) (call-next-method)))
(defclass C23 (C22) ())
(defmethod f ((x C23) (y C23) (z C23))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C23 'C23 'C23)
                 (f (create (class C23))
                    (create (class C23))
                    (create (class C22))))
(defmethod f ((x C23) (y C23) (z C22))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C23 'C23 'C22)
                 (f (create (class C23))
                    (create (class C22))
                    (create (class C23))))
(defmethod f ((x C23) (y C22) (z C23))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C23 'C22 'C23)
                 (f (create (class C22))
                    (create (class C23))
                    (create (class C23))))
(defmethod f ((x C22) (y C23) (z C23))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C22 'C23 'C23)
                 (f (create (class C23))
                    (create (class C22))
                    (create (class C22))))
(defmethod f ((x C23) (y C22) (z C22))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C23 'C22 'C22)
                 (f (create (class C22))
                    (create (class C23))
                    (create (class C22))))
(defmethod f ((x C22) (y C23) (z C22))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C22 'C23 'C22)
                 (f (create (class C22))
                    (create (class C22))
                    (create (class C23))))
(defmethod f ((x C22) (y C22) (z C23))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C22 'C22 'C23)
                 (f (create (class C22))
                    (create (class C22))
                    (create (class C22))))
(defmethod f ((x C22) (y C22) (z C22))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C22 'C22 'C22)
                 (if (next-method-p) (call-next-method)))
(defclass C24 (C23) ())
(defmethod f ((x C24) (y C24) (z C24))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C24 'C24 'C24)
                 (f (create (class C24))
                    (create (class C24))
                    (create (class C23))))
(defmethod f ((x C24) (y C24) (z C23))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C24 'C24 'C23)
                 (f (create (class C24))
                    (create (class C23))
                    (create (class C24))))
(defmethod f ((x C24) (y C23) (z C24))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C24 'C23 'C24)
                 (f (create (class C23))
                    (create (class C24))
                    (create (class C24))))
(defmethod f ((x C23) (y C24) (z C24))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C23 'C24 'C24)
                 (f (create (class C24))
                    (create (class C23))
                    (create (class C23))))
(defmethod f ((x C24) (y C23) (z C23))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C24 'C23 'C23)
                 (f (create (class C23))
                    (create (class C24))
                    (create (class C23))))
(defmethod f ((x C23) (y C24) (z C23))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C23 'C24 'C23)
                 (f (create (class C23))
                    (create (class C23))
                    (create (class C24))))
(defmethod f ((x C23) (y C23) (z C24))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C23 'C23 'C24)
                 (f (create (class C23))
                    (create (class C23))
                    (create (class C23))))
(defmethod f ((x C23) (y C23) (z C23))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C23 'C23 'C23)
                 (if (next-method-p) (call-next-method)))
(defclass C25 (C24) ())
(defmethod f ((x C25) (y C25) (z C25))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C25 'C25 'C25)
                 (f (create (class C25))
                    (create (class C25))
                    (create (class C24))))
(defmethod f ((x C25) (y C25) (z C24))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C25 'C25 'C24)
                 (f (create (class C25))
                    (create (class C24))
                    (create (class C25))))
(defmethod f ((x C25) (y C24) (z C25))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C25 'C24 'C25)
                 (f (create (class C24))
                    (create (class C25))
                    (create (class C25))))
(defmethod f ((x C24) (y C25) (z C25))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C24 'C25 'C25)
                 (f (create (class C25))
                    (create (class C24))
                    (create (class C24))))
(defmethod f ((x C25) (y C24) (z C24))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C25 'C24 'C24)
                 (f (create (class C24))
                    (create (class C25))
                    (create (class C24))))
(defmethod f ((x C24) (y C25) (z C24))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C24 'C25 'C24)
                 (f (create (class C24))
                    (create (class C24))
                    (create (class C25))))
(defmethod f ((x C24) (y C24) (z C25))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C24 'C24 'C25)
                 (f (create (class C24))
                    (create (class C24))
                    (create (class C24))))
(defmethod f ((x C24) (y C24) (z C24))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C24 'C24 'C24)
                 (if (next-method-p) (call-next-method)))
(defclass C26 (C25) ())
(defmethod f ((x C26) (y C26) (z C26))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C26 'C26 'C26)
                 (f (create (class C26))
                    (create (class C26))
                    (create (class C25))))
(defmethod f ((x C26) (y C26) (z C25))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C26 'C26 'C25)
                 (f (create (class C26))
                    (create (class C25))
                    (create (class C26))))
(defmethod f ((x C26) (y C25) (z C26))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C26 'C25 'C26)
                 (f (create (class C25))
                    (create (class C26))
                    (create (class C26))))
(defmethod f ((x C25) (y C26) (z C26))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C25 'C26 'C26)
                 (f (create (class C26))
                    (create (class C25))
                    (create (class C25))))
(defmethod f ((x C26) (y C25) (z C25))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C26 'C25 'C25)
                 (f (create (class C25))
                    (create (class C26))
                    (create (class C25))))
(defmethod f ((x C25) (y C26) (z C25))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C25 'C26 'C25)
                 (f (create (class C25))
                    (create (class C25))
                    (create (class C26))))
(defmethod f ((x C25) (y C25) (z C26))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C25 'C25 'C26)
                 (f (create (class C25))
                    (create (class C25))
                    (create (class C25))))
(defmethod f ((x C25) (y C25) (z C25))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C25 'C25 'C25)
                 (if (next-method-p) (call-next-method)))
(defclass C27 (C26) ())
(defmethod f ((x C27) (y C27) (z C27))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C27 'C27 'C27)
                 (f (create (class C27))
                    (create (class C27))
                    (create (class C26))))
(defmethod f ((x C27) (y C27) (z C26))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C27 'C27 'C26)
                 (f (create (class C27))
                    (create (class C26))
                    (create (class C27))))
(defmethod f ((x C27) (y C26) (z C27))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C27 'C26 'C27)
                 (f (create (class C26))
                    (create (class C27))
                    (create (class C27))))
(defmethod f ((x C26) (y C27) (z C27))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C26 'C27 'C27)
                 (f (create (class C27))
                    (create (class C26))
                    (create (class C26))))
(defmethod f ((x C27) (y C26) (z C26))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C27 'C26 'C26)
                 (f (create (class C26))
                    (create (class C27))
                    (create (class C26))))
(defmethod f ((x C26) (y C27) (z C26))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C26 'C27 'C26)
                 (f (create (class C26))
                    (create (class C26))
                    (create (class C27))))
(defmethod f ((x C26) (y C26) (z C27))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C26 'C26 'C27)
                 (f (create (class C26))
                    (create (class C26))
                    (create (class C26))))
(defmethod f ((x C26) (y C26) (z C26))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C26 'C26 'C26)
                 (if (next-method-p) (call-next-method)))
(defclass C28 (C27) ())
(defmethod f ((x C28) (y C28) (z C28))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C28 'C28 'C28)
                 (f (create (class C28))
                    (create (class C28))
                    (create (class C27))))
(defmethod f ((x C28) (y C28) (z C27))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C28 'C28 'C27)
                 (f (create (class C28))
                    (create (class C27))
                    (create (class C28))))
(defmethod f ((x C28) (y C27) (z C28))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C28 'C27 'C28)
                 (f (create (class C27))
                    (create (class C28))
                    (create (class C28))))
(defmethod f ((x C27) (y C28) (z C28))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C27 'C28 'C28)
                 (f (create (class C28))
                    (create (class C27))
                    (create (class C27))))
(defmethod f ((x C28) (y C27) (z C27))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C28 'C27 'C27)
                 (f (create (class C27))
                    (create (class C28))
                    (create (class C27))))
(defmethod f ((x C27) (y C28) (z C27))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C27 'C28 'C27)
                 (f (create (class C27))
                    (create (class C27))
                    (create (class C28))))
(defmethod f ((x C27) (y C27) (z C28))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C27 'C27 'C28)
                 (f (create (class C27))
                    (create (class C27))
                    (create (class C27))))
(defmethod f ((x C27) (y C27) (z C27))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C27 'C27 'C27)
                 (if (next-method-p) (call-next-method)))
(defclass C29 (C28) ())
(defmethod f ((x C29) (y C29) (z C29))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C29 'C29 'C29)
                 (f (create (class C29))
                    (create (class C29))
                    (create (class C28))))
(defmethod f ((x C29) (y C29) (z C28))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C29 'C29 'C28)
                 (f (create (class C29))
                    (create (class C28))
                    (create (class C29))))
(defmethod f ((x C29) (y C28) (z C29))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C29 'C28 'C29)
                 (f (create (class C28))
                    (create (class C29))
                    (create (class C29))))
(defmethod f ((x C28) (y C29) (z C29))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C28 'C29 'C29)
                 (f (create (class C29))
                    (create (class C28))
                    (create (class C28))))
(defmethod f ((x C29) (y C28) (z C28))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C29 'C28 'C28)
                 (f (create (class C28))
                    (create (class C29))
                    (create (class C28))))
(defmethod f ((x C28) (y C29) (z C28))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C28 'C29 'C28)
                 (f (create (class C28))
                    (create (class C28))
                    (create (class C29))))
(defmethod f ((x C28) (y C28) (z C29))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C28 'C28 'C29)
                 (f (create (class C28))
                    (create (class C28))
                    (create (class C28))))
(defmethod f ((x C28) (y C28) (z C28))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C28 'C28 'C28)
                 (if (next-method-p) (call-next-method)))
(defclass C30 (C29) ())
(defmethod f ((x C30) (y C30) (z C30))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C30 'C30 'C30)
                 (f (create (class C30))
                    (create (class C30))
                    (create (class C29))))
(defmethod f ((x C30) (y C30) (z C29))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C30 'C30 'C29)
                 (f (create (class C30))
                    (create (class C29))
                    (create (class C30))))
(defmethod f ((x C30) (y C29) (z C30))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C30 'C29 'C30)
                 (f (create (class C29))
                    (create (class C30))
                    (create (class C30))))
(defmethod f ((x C29) (y C30) (z C30))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C29 'C30 'C30)
                 (f (create (class C30))
                    (create (class C29))
                    (create (class C29))))
(defmethod f ((x C30) (y C29) (z C29))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C30 'C29 'C29)
                 (f (create (class C29))
                    (create (class C30))
                    (create (class C29))))
(defmethod f ((x C29) (y C30) (z C29))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C29 'C30 'C29)
                 (f (create (class C29))
                    (create (class C29))
                    (create (class C30))))
(defmethod f ((x C29) (y C29) (z C30))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C29 'C29 'C30)
                 (f (create (class C29))
                    (create (class C29))
                    (create (class C29))))
(defmethod f ((x C29) (y C29) (z C29))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C29 'C29 'C29)
                 (if (next-method-p) (call-next-method)))
(defclass C31 (C30) ())
(defmethod f ((x C31) (y C31) (z C31))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C31 'C31 'C31)
                 (f (create (class C31))
                    (create (class C31))
                    (create (class C30))))
(defmethod f ((x C31) (y C31) (z C30))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C31 'C31 'C30)
                 (f (create (class C31))
                    (create (class C30))
                    (create (class C31))))
(defmethod f ((x C31) (y C30) (z C31))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C31 'C30 'C31)
                 (f (create (class C30))
                    (create (class C31))
                    (create (class C31))))
(defmethod f ((x C30) (y C31) (z C31))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C30 'C31 'C31)
                 (f (create (class C31))
                    (create (class C30))
                    (create (class C30))))
(defmethod f ((x C31) (y C30) (z C30))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C31 'C30 'C30)
                 (f (create (class C30))
                    (create (class C31))
                    (create (class C30))))
(defmethod f ((x C30) (y C31) (z C30))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C30 'C31 'C30)
                 (f (create (class C30))
                    (create (class C30))
                    (create (class C31))))
(defmethod f ((x C30) (y C30) (z C31))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C30 'C30 'C31)
                 (f (create (class C30))
                    (create (class C30))
                    (create (class C30))))
(defmethod f ((x C30) (y C30) (z C30))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C30 'C30 'C30)
                 (if (next-method-p) (call-next-method)))
(defclass C32 (C31) ())
(defmethod f ((x C32) (y C32) (z C32))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C32 'C32 'C32)
                 (f (create (class C32))
                    (create (class C32))
                    (create (class C31))))
(defmethod f ((x C32) (y C32) (z C31))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C32 'C32 'C31)
                 (f (create (class C32))
                    (create (class C31))
                    (create (class C32))))
(defmethod f ((x C32) (y C31) (z C32))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C32 'C31 'C32)
                 (f (create (class C31))
                    (create (class C32))
                    (create (class C32))))
(defmethod f ((x C31) (y C32) (z C32))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C31 'C32 'C32)
                 (f (create (class C32))
                    (create (class C31))
                    (create (class C31))))
(defmethod f ((x C32) (y C31) (z C31))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C32 'C31 'C31)
                 (f (create (class C31))
                    (create (class C32))
                    (create (class C31))))
(defmethod f ((x C31) (y C32) (z C31))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C31 'C32 'C31)
                 (f (create (class C31))
                    (create (class C31))
                    (create (class C32))))
(defmethod f ((x C31) (y C31) (z C32))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C31 'C31 'C32)
                 (f (create (class C31))
                    (create (class C31))
                    (create (class C31))))
(defmethod f ((x C31) (y C31) (z C31))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C31 'C31 'C31)
                 (if (next-method-p) (call-next-method)))
(defclass C (C32) ())
(defmethod f ((x C) (y C) (z C))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C 'C 'C)
                 (f (create (class C))
                    (create (class C))
                    (create (class C32))))
(defmethod f ((x C) (y C) (z C32))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C 'C 'C32)
                 (f (create (class C))
                    (create (class C32))
                    (create (class C))))
(defmethod f ((x C) (y C32) (z C))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C 'C32 'C)
                 (f (create (class C32))
                    (create (class C))
                    (create (class C))))
(defmethod f ((x C32) (y C) (z C))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C32 'C 'C)
                 (f (create (class C))
                    (create (class C32))
                    (create (class C32))))
(defmethod f ((x C) (y C32) (z C32))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C 'C32 'C32)
                 (f (create (class C32))
                    (create (class C))
                    (create (class C32))))
(defmethod f ((x C32) (y C) (z C32))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C32 'C 'C32)
                 (f (create (class C32))
                    (create (class C32))
                    (create (class C))))
(defmethod f ((x C32) (y C32) (z C))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C32 'C32 'C)
                 (f (create (class C32))
                    (create (class C32))
                    (create (class C32))))
(defmethod f ((x C32) (y C32) (z C32))
                 (format (standard-output) "call with ~A ~A ~A~%" 'C32 'C32 'C32)
                 (if (next-method-p) (call-next-method)))
(f (create (class c)) (create (class c)) (creat (class c))))
